STEP #1

download CLI :
curl -LO https://github.com/tektoncd/cli/releases/download/v0.30.1/tektoncd-cli-0.30.1_Linux-64bit.deb
sudo dpkg -i ./tektoncd-cli-0.30.1_Linux-64bit.deb

login to Azure account:
az login

verify the configuration: 
kubectl config view 

if you look some: 

apiVersion: v1
clusters: null
contexts: null
current-context: ""
kind: Config
preferences: {}
users: null

than do:
az aks get-credentials --resource-group "name your resource-group"  --name "your cluster name"

STEP #2

Install Tekton Pipelines:
kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml

STEP #3
Install Tekton Dashboard:
kubectl apply --filename https://storage.googleapis.com/tekton-releases/dashboard/latest/release.yaml

when the tekton-dashboard will be created you can look it:
kubectl --namespace tekton-pipelines port-forward svc/tekton-dashboard 9097:9097

go in the browser - 
http://localhost:9097/#/namespaces/default/pipelines

STEP #4
Install tasks from Tekton Hub:
tkn hub install task git-clone && tkn hub install task buildah && tkn hub install task kubernetes-actions 

STEP #5
Install Tekton Triggers:
kubectl apply --filename https://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml

STEP #6
Install Tekton Operators:
kubectl apply -f https://storage.googleapis.com/tekton-releases/operator/latest/release.yaml

STEP #7
Create secretfile that defined login Docker account

cat > secret.yaml 

kind: Secret
apiVersion: v1
metadata:
  name: regsecret
  annotations:
    tekton.dev/docker-0: https://index.docker.io/
type: kubernetes.io/basic-auth
stringData:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

Need to save this file and run:
kubectl apply -f secret.yaml

STEP #8 
Run all files (pipelines) in "pipeline" folder:
kubectl apply -f pipeline/

STEP #9
Run all files in "tekton" folder:
kubectl apply -f tekton/

STEP #10

kubectl create rolebinding pipeline-pvc --clusterrole=edit --serviceaccount=default:pipeline --namespace=default

STEP #11

kubectl create clusterrolebinding pipeline-admin --clusterrole=cluster-admin --serviceaccount=default:pipeline

STEP #12
Run your deploy.yml file:
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.0/deploy/static/provider/cloud/deploy.yaml

